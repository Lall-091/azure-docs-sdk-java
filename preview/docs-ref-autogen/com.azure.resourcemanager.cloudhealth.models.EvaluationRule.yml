### YamlMime:JavaType
uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule"
fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule"
name: "EvaluationRule"
nameWithType: "EvaluationRule"
summary: "Evaluation rule for a signal definition."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **EvaluationRule**</br> implements <xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
constructors:
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.EvaluationRule()"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.EvaluationRule()"
  name: "EvaluationRule()"
  nameWithType: "EvaluationRule.EvaluationRule()"
  summary: "Creates an instance of Evaluation<wbr>Rule class."
  syntax: "public EvaluationRule()"
  desc: "Creates an instance of EvaluationRule class."
methods:
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.degradedRule()"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.degradedRule()"
  name: "degradedRule()"
  nameWithType: "EvaluationRule.degradedRule()"
  summary: "Get the degraded<wbr>Rule property: Degraded rule with static threshold."
  syntax: "public ThresholdRule degradedRule()"
  desc: "Get the degradedRule property: Degraded rule with static threshold. When used, dynamicDetectionRule must not be set."
  returns:
    description: "the degradedRule value."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.ThresholdRule?alt=com.azure.resourcemanager.cloudhealth.models.ThresholdRule&text=ThresholdRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.dynamicDetectionRule()"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.dynamicDetectionRule()"
  name: "dynamicDetectionRule()"
  nameWithType: "EvaluationRule.dynamicDetectionRule()"
  summary: "Get the dynamic<wbr>Detection<wbr>Rule property: Configure to use ML-based dynamic thresholds."
  syntax: "public DynamicDetectionRule dynamicDetectionRule()"
  desc: "Get the dynamicDetectionRule property: Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set."
  returns:
    description: "the dynamicDetectionRule value."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.DynamicDetectionRule?alt=com.azure.resourcemanager.cloudhealth.models.DynamicDetectionRule&text=DynamicDetectionRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.fromJson(com.azure.json.JsonReader)"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.fromJson(JsonReader jsonReader)"
  name: "fromJson(JsonReader jsonReader)"
  nameWithType: "EvaluationRule.fromJson(JsonReader jsonReader)"
  summary: "Reads an instance of Evaluation<wbr>Rule from the Json<wbr>Reader."
  modifiers:
  - "static"
  parameters:
  - description: "The JsonReader being read."
    name: "jsonReader"
    type: "<xref href=\"com.azure.json.JsonReader?alt=com.azure.json.JsonReader&text=JsonReader\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public static EvaluationRule fromJson(JsonReader jsonReader)"
  exceptions:
  - description: "If an error occurs while reading the EvaluationRule."
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  desc: "Reads an instance of EvaluationRule from the JsonReader."
  returns:
    description: "An instance of EvaluationRule if the JsonReader was pointing to an instance of it, or null if it was\n pointing to JSON null."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.toJson(com.azure.json.JsonWriter)"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.toJson(JsonWriter jsonWriter)"
  name: "toJson(JsonWriter jsonWriter)"
  nameWithType: "EvaluationRule.toJson(JsonWriter jsonWriter)"
  parameters:
  - name: "jsonWriter"
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public JsonWriter toJson(JsonWriter jsonWriter)"
  exceptions:
  - type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/io/IOException.html\">IOException</a>"
  returns:
    type: "<xref href=\"com.azure.json.JsonWriter?alt=com.azure.json.JsonWriter&text=JsonWriter\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.unhealthyRule()"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.unhealthyRule()"
  name: "unhealthyRule()"
  nameWithType: "EvaluationRule.unhealthyRule()"
  summary: "Get the unhealthy<wbr>Rule property: Unhealthy rule with static threshold."
  syntax: "public ThresholdRule unhealthyRule()"
  desc: "Get the unhealthyRule property: Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set."
  returns:
    description: "the unhealthyRule value."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.ThresholdRule?alt=com.azure.resourcemanager.cloudhealth.models.ThresholdRule&text=ThresholdRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.validate()"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.validate()"
  name: "validate()"
  nameWithType: "EvaluationRule.validate()"
  summary: "Validates the instance."
  syntax: "public void validate()"
  desc: "Validates the instance."
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withDegradedRule(com.azure.resourcemanager.cloudhealth.models.ThresholdRule)"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withDegradedRule(ThresholdRule degradedRule)"
  name: "withDegradedRule(ThresholdRule degradedRule)"
  nameWithType: "EvaluationRule.withDegradedRule(ThresholdRule degradedRule)"
  summary: "Set the degraded<wbr>Rule property: Degraded rule with static threshold."
  parameters:
  - description: "the degradedRule value to set."
    name: "degradedRule"
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.ThresholdRule?alt=com.azure.resourcemanager.cloudhealth.models.ThresholdRule&text=ThresholdRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EvaluationRule withDegradedRule(ThresholdRule degradedRule)"
  desc: "Set the degradedRule property: Degraded rule with static threshold. When used, dynamicDetectionRule must not be set."
  returns:
    description: "the EvaluationRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withDynamicDetectionRule(com.azure.resourcemanager.cloudhealth.models.DynamicDetectionRule)"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withDynamicDetectionRule(DynamicDetectionRule dynamicDetectionRule)"
  name: "withDynamicDetectionRule(DynamicDetectionRule dynamicDetectionRule)"
  nameWithType: "EvaluationRule.withDynamicDetectionRule(DynamicDetectionRule dynamicDetectionRule)"
  summary: "Set the dynamic<wbr>Detection<wbr>Rule property: Configure to use ML-based dynamic thresholds."
  parameters:
  - description: "the dynamicDetectionRule value to set."
    name: "dynamicDetectionRule"
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.DynamicDetectionRule?alt=com.azure.resourcemanager.cloudhealth.models.DynamicDetectionRule&text=DynamicDetectionRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EvaluationRule withDynamicDetectionRule(DynamicDetectionRule dynamicDetectionRule)"
  desc: "Set the dynamicDetectionRule property: Configure to use ML-based dynamic thresholds. When used, degradedRule and unhealthyRule must not be set."
  returns:
    description: "the EvaluationRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withUnhealthyRule(com.azure.resourcemanager.cloudhealth.models.ThresholdRule)"
  fullName: "com.azure.resourcemanager.cloudhealth.models.EvaluationRule.withUnhealthyRule(ThresholdRule unhealthyRule)"
  name: "withUnhealthyRule(ThresholdRule unhealthyRule)"
  nameWithType: "EvaluationRule.withUnhealthyRule(ThresholdRule unhealthyRule)"
  summary: "Set the unhealthy<wbr>Rule property: Unhealthy rule with static threshold."
  parameters:
  - description: "the unhealthyRule value to set."
    name: "unhealthyRule"
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.ThresholdRule?alt=com.azure.resourcemanager.cloudhealth.models.ThresholdRule&text=ThresholdRule\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public EvaluationRule withUnhealthyRule(ThresholdRule unhealthyRule)"
  desc: "Set the unhealthyRule property: Unhealthy rule with static threshold. When used, dynamicDetectionRule must not be set."
  returns:
    description: "the EvaluationRule object itself."
    type: "<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Evaluation rule for a signal definition."
implements:
- "<xref href=\"com.azure.json.JsonSerializable?alt=com.azure.json.JsonSerializable&text=JsonSerializable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.resourcemanager.cloudhealth.models.EvaluationRule?alt=com.azure.resourcemanager.cloudhealth.models.EvaluationRule&text=EvaluationRule\" data-throw-if-not-resolved=\"False\" />&gt;"
metadata: {}
package: "com.azure.resourcemanager.cloudhealth.models"
artifact: com.azure.resourcemanager:azure-resourcemanager-cloudhealth:1.0.0-beta.1
