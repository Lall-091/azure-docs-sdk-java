### YamlMime:JavaType
uid: "com.azure.ai.agents.persistent.PersistentAgentsClient"
fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient"
name: "PersistentAgentsClient"
nameWithType: "PersistentAgentsClient"
summary: "Initializes a new instance of the synchronous Persistent<wbr>Agents<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **PersistentAgentsClient**"
methods:
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.createThreadAndRun(com.azure.ai.agents.persistent.models.CreateThreadAndRunOptions)"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.createThreadAndRun(CreateThreadAndRunOptions options)"
  name: "createThreadAndRun(CreateThreadAndRunOptions options)"
  nameWithType: "PersistentAgentsClient.createThreadAndRun(CreateThreadAndRunOptions options)"
  summary: "Creates a new agent thread and immediately starts a run using that new thread."
  parameters:
  - description: "Options for createThreadAndRun API."
    name: "options"
    type: "<xref href=\"com.azure.ai.agents.persistent.models.CreateThreadAndRunOptions?alt=com.azure.ai.agents.persistent.models.CreateThreadAndRunOptions&text=CreateThreadAndRunOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public ThreadRun createThreadAndRun(CreateThreadAndRunOptions options)"
  desc: "Creates a new agent thread and immediately starts a run using that new thread."
  returns:
    description: "data representing a single evaluation run of an agent thread."
    type: "<xref href=\"com.azure.ai.agents.persistent.models.ThreadRun?alt=com.azure.ai.agents.persistent.models.ThreadRun&text=ThreadRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.createThreadAndRunWithResponse(com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.createThreadAndRunWithResponse(BinaryData createThreadAndRunRequest, RequestOptions requestOptions)"
  name: "createThreadAndRunWithResponse(BinaryData createThreadAndRunRequest, RequestOptions requestOptions)"
  nameWithType: "PersistentAgentsClient.createThreadAndRunWithResponse(BinaryData createThreadAndRunRequest, RequestOptions requestOptions)"
  summary: "Creates a new agent thread and immediately starts a run using that new thread."
  parameters:
  - description: "The createThreadAndRunRequest parameter."
    name: "createThreadAndRunRequest"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createThreadAndRunWithResponse(BinaryData createThreadAndRunRequest, RequestOptions requestOptions)"
  desc: "Creates a new agent thread and immediately starts a run using that new thread.\n\n**Request Body Schema**\n\n```java\n{\n     assistant_id: String (Required)\n     thread (Optional): {\n         messages (Optional): [\n              (Optional){\n                 role: String(user/assistant) (Required)\n                 content: BinaryData (Required)\n                 attachments (Optional): [\n                      (Optional){\n                         file_id: String (Optional)\n                         data_source (Optional): {\n                             uri: String (Required)\n                             type: String(uri_asset/id_asset) (Required)\n                         }\n                         tools (Required): [\n                             BinaryData (Required)\n                         ]\n                     }\n                 ]\n                 metadata (Optional): {\n                     String: String (Required)\n                 }\n             }\n         ]\n         tool_resources (Optional): {\n             code_interpreter (Optional): {\n                 file_ids (Optional): [\n                     String (Optional)\n                 ]\n                 data_sources (Optional): [\n                     (recursive schema, see above)\n                 ]\n             }\n             file_search (Optional): {\n                 vector_store_ids (Optional): [\n                     String (Optional)\n                 ]\n                 vector_stores (Optional): [\n                      (Optional){\n                         name: String (Required)\n                         configuration (Required): {\n                             data_sources (Required): [\n                                 (recursive schema, see above)\n                             ]\n                         }\n                     }\n                 ]\n             }\n             azure_ai_search (Optional): {\n                 indexes (Optional): [\n                      (Optional){\n                         index_connection_id: String (Optional)\n                         index_name: String (Optional)\n                         query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                         top_k: Integer (Optional)\n                         filter: String (Optional)\n                         index_asset_id: String (Optional)\n                     }\n                 ]\n             }\n         }\n         metadata (Optional): {\n             String: String (Required)\n         }\n     }\n     model: String (Optional)\n     instructions: String (Optional)\n     tools (Optional): [\n          (Optional){\n             type: String (Required)\n         }\n     ]\n     tool_resources (Optional): (recursive schema, see tool_resources above)\n     stream: Boolean (Optional)\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Optional)\n     max_completion_tokens: Integer (Optional)\n     truncation_strategy (Optional): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Optional)\n     response_format: BinaryData (Optional)\n     parallel_tool_calls: Boolean (Optional)\n     metadata (Optional): {\n         String: String (Required)\n     }\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     id: String (Required)\n     object: String (Required)\n     thread_id: String (Required)\n     assistant_id: String (Required)\n     status: String(queued/in_progress/requires_action/cancelling/cancelled/failed/completed/expired) (Required)\n     required_action (Optional): {\n         type: String (Required)\n     }\n     last_error (Required): {\n         code: String (Required)\n         message: String (Required)\n     }\n     model: String (Required)\n     instructions: String (Required)\n     tools (Required): [\n          (Required){\n             type: String (Required)\n         }\n     ]\n     created_at: long (Required)\n     expires_at: Long (Required)\n     started_at: Long (Required)\n     completed_at: Long (Required)\n     cancelled_at: Long (Required)\n     failed_at: Long (Required)\n     incomplete_details (Required): {\n         reason: String(max_completion_tokens/max_prompt_tokens) (Required)\n     }\n     usage (Required): {\n         completion_tokens: long (Required)\n         prompt_tokens: long (Required)\n         total_tokens: long (Required)\n     }\n     temperature: Double (Optional)\n     top_p: Double (Optional)\n     max_prompt_tokens: Integer (Required)\n     max_completion_tokens: Integer (Required)\n     truncation_strategy (Required): {\n         type: String(auto/last_messages) (Required)\n         last_messages: Integer (Optional)\n     }\n     tool_choice: BinaryData (Required)\n     response_format: BinaryData (Required)\n     metadata (Required): {\n         String: String (Required)\n     }\n     tool_resources (Optional): {\n         code_interpreter (Optional): {\n             file_ids (Optional): [\n                 String (Optional)\n             ]\n             data_sources (Optional): [\n                  (Optional){\n                     uri: String (Required)\n                     type: String(uri_asset/id_asset) (Required)\n                 }\n             ]\n         }\n         file_search (Optional): {\n             vector_store_ids (Optional): [\n                 String (Optional)\n             ]\n             vector_stores (Optional): [\n                  (Optional){\n                     name: String (Required)\n                     configuration (Required): {\n                         data_sources (Required): [\n                             (recursive schema, see above)\n                         ]\n                     }\n                 }\n             ]\n         }\n         azure_ai_search (Optional): {\n             indexes (Optional): [\n                  (Optional){\n                     index_connection_id: String (Optional)\n                     index_name: String (Optional)\n                     query_type: String(simple/semantic/vector/vector_simple_hybrid/vector_semantic_hybrid) (Optional)\n                     top_k: Integer (Optional)\n                     filter: String (Optional)\n                     index_asset_id: String (Optional)\n                 }\n             ]\n         }\n     }\n     parallel_tool_calls: boolean (Required)\n }\n```"
  returns:
    description: "data representing a single evaluation run of an agent thread along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getFilesClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getFilesClient()"
  name: "getFilesClient()"
  nameWithType: "PersistentAgentsClient.getFilesClient()"
  summary: "Gets an instance of Files<wbr>Client class."
  syntax: "public FilesClient getFilesClient()"
  desc: "Gets an instance of FilesClient class."
  returns:
    description: "an instance of FilesClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.FilesClient?alt=com.azure.ai.agents.persistent.FilesClient&text=FilesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getMessagesClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getMessagesClient()"
  name: "getMessagesClient()"
  nameWithType: "PersistentAgentsClient.getMessagesClient()"
  summary: "Gets an instance of Messages<wbr>Client class."
  syntax: "public MessagesClient getMessagesClient()"
  desc: "Gets an instance of MessagesClient class."
  returns:
    description: "an instance of MessagesClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.MessagesClient?alt=com.azure.ai.agents.persistent.MessagesClient&text=MessagesClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getPersistentAgentsAdministrationClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getPersistentAgentsAdministrationClient()"
  name: "getPersistentAgentsAdministrationClient()"
  nameWithType: "PersistentAgentsClient.getPersistentAgentsAdministrationClient()"
  summary: "Gets an instance of Persistent<wbr>Agents<wbr>Administration<wbr>Client class."
  syntax: "public PersistentAgentsAdministrationClient getPersistentAgentsAdministrationClient()"
  desc: "Gets an instance of PersistentAgentsAdministrationClient class."
  returns:
    description: "an instance of PersistentAgentsAdministrationClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.PersistentAgentsAdministrationClient?alt=com.azure.ai.agents.persistent.PersistentAgentsAdministrationClient&text=PersistentAgentsAdministrationClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getRunsClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getRunsClient()"
  name: "getRunsClient()"
  nameWithType: "PersistentAgentsClient.getRunsClient()"
  summary: "Gets an instance of Runs<wbr>Client class."
  syntax: "public RunsClient getRunsClient()"
  desc: "Gets an instance of RunsClient class."
  returns:
    description: "an instance of RunsClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.RunsClient?alt=com.azure.ai.agents.persistent.RunsClient&text=RunsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getThreadsClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getThreadsClient()"
  name: "getThreadsClient()"
  nameWithType: "PersistentAgentsClient.getThreadsClient()"
  summary: "Gets an instance of Threads<wbr>Client class."
  syntax: "public ThreadsClient getThreadsClient()"
  desc: "Gets an instance of ThreadsClient class."
  returns:
    description: "an instance of ThreadsClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.ThreadsClient?alt=com.azure.ai.agents.persistent.ThreadsClient&text=ThreadsClient\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.ai.agents.persistent.PersistentAgentsClient.getVectorStoresClient()"
  fullName: "com.azure.ai.agents.persistent.PersistentAgentsClient.getVectorStoresClient()"
  name: "getVectorStoresClient()"
  nameWithType: "PersistentAgentsClient.getVectorStoresClient()"
  summary: "Gets an instance of Vector<wbr>Stores<wbr>Client class."
  syntax: "public VectorStoresClient getVectorStoresClient()"
  desc: "Gets an instance of VectorStoresClient class."
  returns:
    description: "an instance of VectorStoresClient class."
    type: "<xref href=\"com.azure.ai.agents.persistent.VectorStoresClient?alt=com.azure.ai.agents.persistent.VectorStoresClient&text=VectorStoresClient\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "Initializes a new instance of the synchronous PersistentAgentsClient type."
metadata: {}
package: "com.azure.ai.agents.persistent"
artifact: com.azure:azure-ai-agents-persistent:1.0.0-beta.2
