### YamlMime:JavaType
uid: "com.azure.developer.loadtesting.LoadTestRunClient"
fullName: "com.azure.developer.loadtesting.LoadTestRunClient"
name: "LoadTestRunClient"
nameWithType: "LoadTestRunClient"
summary: "Initializes a new instance of the synchronous Load<wbr>Test<wbr>Run<wbr>Client type."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "java.lang.<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html\">Object</a>"
  methodsRef:
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#clone--\">clone</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#equals-java.lang.Object-\">equals</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#finalize--\">finalize</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#getClass--\">getClass</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#hashCode--\">hashCode</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify--\">notify</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--\">notifyAll</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--\">toString</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-\">wait</a>"
  - "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait-long-int-\">wait</a>"
syntax: "public final class **LoadTestRunClient**"
methods:
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestProfileRun(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestProfileRun(String testProfileRunId, BinaryData body, RequestOptions testProfileRunRequestOptions)"
  name: "beginTestProfileRun(String testProfileRunId, BinaryData body, RequestOptions testProfileRunRequestOptions)"
  nameWithType: "LoadTestRunClient.beginTestProfileRun(String testProfileRunId, BinaryData body, RequestOptions testProfileRunRequestOptions)"
  summary: "Starts a test run and polls the status of the test run."
  parameters:
  - description: "Unique name for the test profile run, must contain only lower-case alphabetic, numeric,\n underscore\n or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Test Profile Run Model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the file upload HTTP request before HTTP client\n sends it."
    name: "testProfileRunRequestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginTestProfileRun(String testProfileRunId, BinaryData body, RequestOptions testProfileRunRequestOptions)"
  desc: "Starts a test run and polls the status of the test run."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the test run\n status(ACCEPTED/NOTSTARTED/EXECUTING/DONE/CANCELLING/CANCELLED/FAILED)."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestProfileRun(java.lang.String,com.azure.developer.loadtesting.models.TestProfileRun)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestProfileRun(String testProfileRunId, TestProfileRun testProfileRun)"
  name: "beginTestProfileRun(String testProfileRunId, TestProfileRun testProfileRun)"
  nameWithType: "LoadTestRunClient.beginTestProfileRun(String testProfileRunId, TestProfileRun testProfileRun)"
  summary: "Starts a test run and polls the status of the test run."
  parameters:
  - description: "Unique name for the test profile run, must contain only lower-case alphabetic, numeric,\n underscore\n or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Test Profile Run Model."
    name: "testProfileRun"
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<TestProfileRun,TestProfileRun> beginTestProfileRun(String testProfileRunId, TestProfileRun testProfileRun)"
  desc: "Starts a test run and polls the status of the test run."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the test run\n status(ACCEPTED/NOTSTARTED/EXECUTING/DONE/CANCELLING/CANCELLED/FAILED)."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestRun(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestRun(String testRunId, BinaryData body, RequestOptions testRunRequestOptions)"
  name: "beginTestRun(String testRunId, BinaryData body, RequestOptions testRunRequestOptions)"
  nameWithType: "LoadTestRunClient.beginTestRun(String testRunId, BinaryData body, RequestOptions testRunRequestOptions)"
  summary: "Starts a test run and polls the status of the test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic, numeric, underscore\n or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Load test run model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the file upload HTTP request before HTTP client sends it."
    name: "testRunRequestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public SyncPoller<BinaryData,BinaryData> beginTestRun(String testRunId, BinaryData body, RequestOptions testRunRequestOptions)"
  desc: "Starts a test run and polls the status of the test run."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the test run\n status(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE)."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestRun(java.lang.String,com.azure.developer.loadtesting.models.LoadTestRun,java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.beginTestRun(String testRunId, LoadTestRun testRun, String oldTestRunId)"
  name: "beginTestRun(String testRunId, LoadTestRun testRun, String oldTestRunId)"
  nameWithType: "LoadTestRunClient.beginTestRun(String testRunId, LoadTestRun testRun, String oldTestRunId)"
  summary: "Starts a test run and polls the status of the test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic, numeric, underscore\n or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Load test run model."
    name: "testRun"
    type: "<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />"
  - description: "Existing test run identifier that should be rerun, if this is provided, the test will run\n with the JMX file, configuration and app components from the existing test run. You can override the\n configuration values for new test run in the request body."
    name: "oldTestRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public SyncPoller<LoadTestRun,LoadTestRun> beginTestRun(String testRunId, LoadTestRun testRun, String oldTestRunId)"
  desc: "Starts a test run and polls the status of the test run."
  returns:
    description: "A <xref uid=\"com.azure.core.util.polling.SyncPoller\" data-throw-if-not-resolved=\"false\" data-raw-source=\"SyncPoller\"></xref> to poll on and retrieve the test run\n status(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE)."
    type: "<xref href=\"com.azure.core.util.polling.SyncPoller?alt=com.azure.core.util.polling.SyncPoller&text=SyncPoller\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />,<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateAppComponents(java.lang.String,com.azure.developer.loadtesting.models.TestRunAppComponents)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateAppComponents(String testRunId, TestRunAppComponents body)"
  name: "createOrUpdateAppComponents(String testRunId, TestRunAppComponents body)"
  nameWithType: "LoadTestRunClient.createOrUpdateAppComponents(String testRunId, TestRunAppComponents body)"
  summary: "Add an app component to a test run."
  parameters:
  - description: "Unique Id for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "App Component model."
    name: "body"
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunAppComponents?alt=com.azure.developer.loadtesting.models.TestRunAppComponents&text=TestRunAppComponents\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TestRunAppComponents createOrUpdateAppComponents(String testRunId, TestRunAppComponents body)"
  desc: "Add an app component to a test run. Add an app component to a test run by providing the resource Id, name and type."
  returns:
    description: "test run app component."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunAppComponents?alt=com.azure.developer.loadtesting.models.TestRunAppComponents&text=TestRunAppComponents\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateAppComponentsWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateAppComponentsWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  name: "createOrUpdateAppComponentsWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.createOrUpdateAppComponentsWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  summary: "Add an app component to a test run."
  parameters:
  - description: "Unique Id for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "App Component model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createOrUpdateAppComponentsWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  desc: "Add an app component to a test run. Add an app component to a test run by providing the resource Id, name and type.\n\n**Request Body Schema**\n\n```java\n{\n     components (Optional, Required on create): {\n         String (Required): {\n             resourceId: String (Required)\n             resourceName: String (Optional, Required on create)\n             resourceType: String (Optional, Required on create)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testRunId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     components (Optional, Required on create): {\n         String (Required): {\n             resourceId: String (Required)\n             resourceName: String (Optional, Required on create)\n             resourceType: String (Optional, Required on create)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testRunId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test run app component along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateServerMetricsConfig(java.lang.String,com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateServerMetricsConfig(String testRunId, TestRunServerMetricsConfiguration body)"
  name: "createOrUpdateServerMetricsConfig(String testRunId, TestRunServerMetricsConfiguration body)"
  nameWithType: "LoadTestRunClient.createOrUpdateServerMetricsConfig(String testRunId, TestRunServerMetricsConfiguration body)"
  summary: "Configure server metrics for a test run."
  parameters:
  - description: "Unique Id for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Server metric configuration model."
    name: "body"
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration?alt=com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration&text=TestRunServerMetricsConfiguration\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public TestRunServerMetricsConfiguration createOrUpdateServerMetricsConfig(String testRunId, TestRunServerMetricsConfiguration body)"
  desc: "Configure server metrics for a test run."
  returns:
    description: "test run server metrics configuration."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration?alt=com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration&text=TestRunServerMetricsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateServerMetricsConfigWithResponse(java.lang.String,com.azure.core.util.BinaryData,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.createOrUpdateServerMetricsConfigWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  name: "createOrUpdateServerMetricsConfigWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.createOrUpdateServerMetricsConfigWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  summary: "Configure server metrics for a test run."
  parameters:
  - description: "Unique Id for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Server metric configuration model."
    name: "body"
    type: "<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> createOrUpdateServerMetricsConfigWithResponse(String testRunId, BinaryData body, RequestOptions requestOptions)"
  desc: "Configure server metrics for a test run.\n\n**Request Body Schema**\n\n```java\n{\n     testRunId: String (Optional)\n     metrics (Optional): {\n         String (Required): {\n             id: String (Optional)\n             resourceId: String (Optional, Required on create)\n             metricNamespace: String (Optional, Required on create)\n             displayDescription: String (Optional)\n             name: String (Optional, Required on create)\n             aggregation: String (Optional, Required on create)\n             unit: String (Optional)\n             resourceType: String (Optional, Required on create)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     testRunId: String (Optional)\n     metrics (Optional): {\n         String (Required): {\n             id: String (Optional)\n             resourceId: String (Optional, Required on create)\n             metricNamespace: String (Optional, Required on create)\n             displayDescription: String (Optional)\n             name: String (Optional, Required on create)\n             aggregation: String (Optional, Required on create)\n             unit: String (Optional)\n             resourceType: String (Optional, Required on create)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test run server metrics configuration along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestProfileRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestProfileRun(String testProfileRunId)"
  name: "deleteTestProfileRun(String testProfileRunId)"
  nameWithType: "LoadTestRunClient.deleteTestProfileRun(String testProfileRunId)"
  summary: "Delete an existing load test profile run."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteTestProfileRun(String testProfileRunId)"
  desc: "Delete an existing load test profile run. Delete an existing load test profile run by providing the test profile run Id."
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestProfileRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  name: "deleteTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.deleteTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  summary: "Delete an existing load test profile run."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  desc: "Delete an existing load test profile run. Delete an existing load test profile run by providing the test profile run Id."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestRun(String testRunId)"
  name: "deleteTestRun(String testRunId)"
  nameWithType: "LoadTestRunClient.deleteTestRun(String testRunId)"
  summary: "Delete an existing load test run."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public void deleteTestRun(String testRunId)"
  desc: "Delete an existing load test run. Delete an existing load test run by providing the testRunId."
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.deleteTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "deleteTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.deleteTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "Delete an existing load test run."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<Void> deleteTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "Delete an existing load test run. Delete an existing load test run by providing the testRunId."
  returns:
    description: "the <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html\">Void</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getAppComponents(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getAppComponents(String testRunId)"
  name: "getAppComponents(String testRunId)"
  nameWithType: "LoadTestRunClient.getAppComponents(String testRunId)"
  summary: "Get associated app component (collection of azure resources) for the given test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestRunAppComponents getAppComponents(String testRunId)"
  desc: "Get associated app component (collection of azure resources) for the given test run."
  returns:
    description: "associated app component (collection of azure resources) for the given test\n run."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunAppComponents?alt=com.azure.developer.loadtesting.models.TestRunAppComponents&text=TestRunAppComponents\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getAppComponentsWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getAppComponentsWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "getAppComponentsWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getAppComponentsWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "Get associated app component (collection of azure resources) for the given test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getAppComponentsWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "Get associated app component (collection of azure resources) for the given test run.\n\n**Response Body Schema**\n\n```java\n{\n     components (Optional, Required on create): {\n         String (Required): {\n             resourceId: String (Required)\n             resourceName: String (Optional, Required on create)\n             resourceType: String (Optional, Required on create)\n             displayName: String (Optional)\n             resourceGroup: String (Optional)\n             subscriptionId: String (Optional)\n             kind: String (Optional)\n         }\n     }\n     testRunId: String (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "associated app component (collection of azure resources) for the given test\n run along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricDefinitions(java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricDefinitions(String testRunId, String metricNamespace)"
  name: "getMetricDefinitions(String testRunId, String metricNamespace)"
  nameWithType: "LoadTestRunClient.getMetricDefinitions(String testRunId, String metricNamespace)"
  summary: "List the metric definitions for a load test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public MetricDefinitions getMetricDefinitions(String testRunId, String metricNamespace)"
  desc: "List the metric definitions for a load test run."
  returns:
    description: "represents collection of metric definitions."
    type: "<xref href=\"com.azure.developer.loadtesting.models.MetricDefinitions?alt=com.azure.developer.loadtesting.models.MetricDefinitions&text=MetricDefinitions\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricDefinitionsWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricDefinitionsWithResponse(String testRunId, String metricNamespace, RequestOptions requestOptions)"
  name: "getMetricDefinitionsWithResponse(String testRunId, String metricNamespace, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getMetricDefinitionsWithResponse(String testRunId, String metricNamespace, RequestOptions requestOptions)"
  summary: "List the metric definitions for a load test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getMetricDefinitionsWithResponse(String testRunId, String metricNamespace, RequestOptions requestOptions)"
  desc: "List the metric definitions for a load test run.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             dimensions (Optional): [\n                  (Optional){\n                     description: String (Optional)\n                     name: String (Optional)\n                 }\n             ]\n             description: String (Optional)\n             name: String (Optional)\n             namespace: String (Optional)\n             primaryAggregationType: String(Average/Count/None/Total/Percentile75/Percentile90/Percentile95/Percentile96/Percentile97/Percentile98/Percentile99/Percentile999/Percentile9999) (Optional)\n             supportedAggregationTypes (Optional): [\n                 String (Optional)\n             ]\n             unit: String(NotSpecified/Percent/Count/Seconds/Milliseconds/Bytes/BytesPerSecond/CountPerSecond) (Optional)\n             metricAvailabilities (Optional): [\n                  (Optional){\n                     timeGrain: String(PT5S/PT10S/PT1M/PT5M/PT1H) (Optional)\n                 }\n             ]\n         }\n     ]\n }\n```"
  returns:
    description: "represents collection of metric definitions along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricNamespaces(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricNamespaces(String testRunId)"
  name: "getMetricNamespaces(String testRunId)"
  nameWithType: "LoadTestRunClient.getMetricNamespaces(String testRunId)"
  summary: "List the metric namespaces for a load test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public MetricNamespaces getMetricNamespaces(String testRunId)"
  desc: "List the metric namespaces for a load test run."
  returns:
    description: "represents collection of metric namespaces."
    type: "<xref href=\"com.azure.developer.loadtesting.models.MetricNamespaces?alt=com.azure.developer.loadtesting.models.MetricNamespaces&text=MetricNamespaces\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricNamespacesWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getMetricNamespacesWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "getMetricNamespacesWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getMetricNamespacesWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "List the metric namespaces for a load test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getMetricNamespacesWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "List the metric namespaces for a load test run.\n\n**Response Body Schema**\n\n```java\n{\n     value (Required): [\n          (Required){\n             description: String (Optional)\n             name: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "represents collection of metric namespaces along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getServerMetricsConfig(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getServerMetricsConfig(String testRunId)"
  name: "getServerMetricsConfig(String testRunId)"
  nameWithType: "LoadTestRunClient.getServerMetricsConfig(String testRunId)"
  summary: "Get associated server metrics configuration for the given test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestRunServerMetricsConfiguration getServerMetricsConfig(String testRunId)"
  desc: "Get associated server metrics configuration for the given test run."
  returns:
    description: "associated server metrics configuration for the given test run."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration?alt=com.azure.developer.loadtesting.models.TestRunServerMetricsConfiguration&text=TestRunServerMetricsConfiguration\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getServerMetricsConfigWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getServerMetricsConfigWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "getServerMetricsConfigWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getServerMetricsConfigWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "Get associated server metrics configuration for the given test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getServerMetricsConfigWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "Get associated server metrics configuration for the given test run.\n\n**Response Body Schema**\n\n```java\n{\n     testRunId: String (Optional)\n     metrics (Optional): {\n         String (Required): {\n             id: String (Optional)\n             resourceId: String (Optional, Required on create)\n             metricNamespace: String (Optional, Required on create)\n             displayDescription: String (Optional)\n             name: String (Optional, Required on create)\n             aggregation: String (Optional, Required on create)\n             unit: String (Optional)\n             resourceType: String (Optional, Required on create)\n         }\n     }\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "associated server metrics configuration for the given test run along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestProfileRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestProfileRun(String testProfileRunId)"
  name: "getTestProfileRun(String testProfileRunId)"
  nameWithType: "LoadTestRunClient.getTestProfileRun(String testProfileRunId)"
  summary: "Get test profile run details."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestProfileRun getTestProfileRun(String testProfileRunId)"
  desc: "Get test profile run details. Get test profile run details by test profile run Id."
  returns:
    description: "test profile run details.\n\n Get test profile run details by test profile run Id."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestProfileRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  name: "getTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  summary: "Get test profile run details."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  desc: "Get test profile run details. Get test profile run details by test profile run Id.\n\n**Response Body Schema**\n\n```java\n{\n     testProfileRunId: String (Required)\n     displayName: String (Optional)\n     description: String (Optional)\n     testProfileId: String (Optional)\n     targetResourceId: String (Optional)\n     targetResourceConfigurations (Optional): {\n         kind: String(FunctionsFlexConsumption) (Required)\n     }\n     status: String(ACCEPTED/NOTSTARTED/EXECUTING/DONE/CANCELLING/CANCELLED/FAILED) (Optional)\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     durationInSeconds: Long (Optional)\n     testRunDetails (Optional): {\n         String (Required): {\n             status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Required)\n             configurationId: String (Required)\n             properties (Required): {\n                 String: String (Required)\n             }\n         }\n     }\n     recommendations (Optional): [\n          (Optional){\n             category: String(ThroughputOptimized/CostOptimized) (Required)\n             configurations (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test profile run details.\n\n Get test profile run details by test profile run Id along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRun(String testRunId)"
  name: "getTestRun(String testRunId)"
  nameWithType: "LoadTestRunClient.getTestRun(String testRunId)"
  summary: "Get test run details by test run Id."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LoadTestRun getTestRun(String testRunId)"
  desc: "Get test run details by test run Id."
  returns:
    description: "test run details by test run Id."
    type: "<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunFile(java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunFile(String testRunId, String fileName)"
  name: "getTestRunFile(String testRunId, String fileName)"
  nameWithType: "LoadTestRunClient.getTestRunFile(String testRunId, String fileName)"
  summary: "Get test run file by file name."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the file."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestRunFileInfo getTestRunFile(String testRunId, String fileName)"
  desc: "Get test run file by file name."
  returns:
    description: "test run file by file name."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestRunFileInfo?alt=com.azure.developer.loadtesting.models.TestRunFileInfo&text=TestRunFileInfo\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunFileWithResponse(java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunFileWithResponse(String testRunId, String fileName, RequestOptions requestOptions)"
  name: "getTestRunFileWithResponse(String testRunId, String fileName, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getTestRunFileWithResponse(String testRunId, String fileName, RequestOptions requestOptions)"
  summary: "Get test run file by file name."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Name of the file."
    name: "fileName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTestRunFileWithResponse(String testRunId, String fileName, RequestOptions requestOptions)"
  desc: "Get test run file by file name.\n\n**Response Body Schema**\n\n```java\n{\n     fileName: String (Required)\n     url: String (Optional)\n     fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS/ZIPPED_ARTIFACTS/URL_TEST_CONFIG/TEST_SCRIPT) (Optional)\n     expireDateTime: OffsetDateTime (Optional)\n     validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n     validationFailureDetails: String (Optional)\n }\n```"
  returns:
    description: "test run file by file name along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.getTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "getTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.getTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "Get test run details by test run Id."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> getTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "Get test run details by test run Id.\n\n**Response Body Schema**\n\n```java\n{\n     testRunId: String (Required)\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Required): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p75/p90/p95/p96/p97/p98/p99/p99.9/p99.99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n         passFailServerMetrics (Optional): {\n             String (Required): {\n                 resourceId: String (Optional, Required on create)\n                 metricNamespace: String (Optional, Required on create)\n                 metricName: String (Optional, Required on create)\n                 aggregation: String (Optional, Required on create)\n                 condition: String (Optional, Required on create)\n                 value: double (Optional, Required on create)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     autoStopCriteria (Optional): {\n         autoStopDisabled: Boolean (Optional)\n         errorRate: Double (Optional)\n         errorRateTimeWindowInSeconds: Long (Optional)\n     }\n     secrets (Optional): {\n         String (Required): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Required)\n     }\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     testRunStatistics (Optional): {\n         String (Required): {\n             transaction: String (Optional)\n             sampleCount: Double (Optional)\n             errorCount: Double (Optional)\n             errorPct: Double (Optional)\n             meanResTime: Double (Optional)\n             medianResTime: Double (Optional)\n             maxResTime: Double (Optional)\n             minResTime: Double (Optional)\n             pct1ResTime: Double (Optional)\n             pct2ResTime: Double (Optional)\n             pct3ResTime: Double (Optional)\n             pct75ResTime: Double (Optional)\n             pct96ResTime: Double (Optional)\n             pct97ResTime: Double (Optional)\n             pct98ResTime: Double (Optional)\n             pct999ResTime: Double (Optional)\n             pct9999ResTime: Double (Optional)\n             throughput: Double (Optional)\n             receivedKBytesPerSec: Double (Optional)\n             sentKBytesPerSec: Double (Optional)\n         }\n     }\n     regionalStatistics (Optional): {\n         String (Required): (recursive schema, see String above)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             requestsPerSecond: Integer (Optional)\n             maxResponseTimeInMs: Integer (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Long (Optional)\n         }\n         regionalLoadTestConfig (Optional): [\n              (Optional){\n                 engineInstances: int (Optional, Required on create)\n                 region: String (Optional, Required on create)\n             }\n         ]\n     }\n     testArtifacts (Optional): {\n         inputArtifacts (Optional): {\n             configFileInfo (Optional): {\n                 fileName: String (Required)\n                 url: String (Optional)\n                 fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS/ZIPPED_ARTIFACTS/URL_TEST_CONFIG/TEST_SCRIPT) (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n                 validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n                 validationFailureDetails: String (Optional)\n             }\n             testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n             userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n             inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n             urlTestConfigFileInfo (Optional): (recursive schema, see urlTestConfigFileInfo above)\n             additionalFileInfo (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n         outputArtifacts (Optional): {\n             resultFileInfo (Optional): (recursive schema, see resultFileInfo above)\n             logsFileInfo (Optional): (recursive schema, see logsFileInfo above)\n             artifactsContainerInfo (Optional): {\n                 url: String (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n             }\n             reportFileInfo (Optional): (recursive schema, see reportFileInfo above)\n         }\n     }\n     testResult: String(PASSED/NOT_APPLICABLE/FAILED) (Optional)\n     virtualUsers: Integer (Optional)\n     displayName: String (Optional)\n     testId: String (Optional)\n     description: String (Optional)\n     status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Optional)\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     executedDateTime: OffsetDateTime (Optional)\n     portalUrl: String (Optional)\n     duration: Long (Optional)\n     virtualUserHours: Double (Optional)\n     subnetId: String (Optional)\n     kind: String(URL/JMX/Locust) (Optional)\n     requestDataLevel: String(NONE/ERRORS) (Optional)\n     debugLogsEnabled: Boolean (Optional)\n     publicIPDisabled: Boolean (Optional)\n     createdByType: String(User/ScheduledTrigger) (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test run details by test run Id along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan)"
  name: "listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan)"
  nameWithType: "LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan)"
  summary: "List the dimension values for the given metric dimension name."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Dimension name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric name."
    name: "metricname"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The timespan of the query. It is a string with the following format\n 'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public PagedIterable<String> listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan)"
  desc: "List the dimension values for the given metric dimension name."
  returns:
    description: "metrics dimension values as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, RequestOptions requestOptions)"
  name: "listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, RequestOptions requestOptions)"
  summary: "List the dimension values for the given metric dimension name."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Dimension name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric name."
    name: "metricname"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The timespan of the query. It is a string with the following format\n 'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, RequestOptions requestOptions)"
  desc: "List the dimension values for the given metric dimension name.\n\n**Query Parameters**\n\n    | -------- | ------ | -------- | ---------------------------------------------------------------------------------------------------- |\n    | Name     | Type   | Required | Description                                                                                          |\n    | interval | String | No       | The interval (i.e. timegrain) of the query. Allowed values: \"PT5S\", \"PT10S\", \"PT1M\", \"PT5M\", \"PT1H\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\nString\n```"
  returns:
    description: "metrics dimension values as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.developer.loadtesting.models.TimeGrain)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, TimeGrain interval)"
  name: "listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, TimeGrain interval)"
  nameWithType: "LoadTestRunClient.listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, TimeGrain interval)"
  summary: "List the dimension values for the given metric dimension name."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Dimension name."
    name: "name"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric name."
    name: "metricname"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The timespan of the query. It is a string with the following format\n 'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The interval (i.e. timegrain) of the query."
    name: "interval"
    type: "<xref href=\"com.azure.developer.loadtesting.models.TimeGrain?alt=com.azure.developer.loadtesting.models.TimeGrain&text=TimeGrain\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<String> listMetricDimensionValues(String testRunId, String name, String metricname, String metricNamespace, String timespan, TimeGrain interval)"
  desc: "List the dimension values for the given metric dimension name."
  returns:
    description: "metrics dimension values as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listMetrics(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listMetrics(String testRunId, String metricName, String metricNamespace, String timespan, RequestOptions requestOptions)"
  name: "listMetrics(String testRunId, String metricName, String metricNamespace, String timespan, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.listMetrics(String testRunId, String metricName, String metricNamespace, String timespan, RequestOptions requestOptions)"
  summary: "List the metric values for a load test run."
  parameters:
  - description: "Unique name for the load test run, must contain only lower-case alphabetic, numeric, underscore\n or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric name."
    name: "metricName"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Metric namespace to query metric definitions for."
    name: "metricNamespace"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The timespan of the query. It is a string with the following format\n 'startDateTime_ISO/endDateTime_ISO'."
    name: "timespan"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listMetrics(String testRunId, String metricName, String metricNamespace, String timespan, RequestOptions requestOptions)"
  desc: "List the metric values for a load test run.\n\n**Query Parameters**\n\n    | ----------- | ------ | -------- | ---------------------------------------------------------------------------------------------------- |\n    | Name        | Type   | Required | Description                                                                                          |\n    | aggregation | String | No       | The aggregation                                                                                      |\n    | interval    | String | No       | The interval (i.e. timegrain) of the query. Allowed values: \"PT5S\", \"PT10S\", \"PT1M\", \"PT5M\", \"PT1H\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Header Parameters**\n\n    | ------------ | ------ | -------- | ----------------------------------------------------- |\n    | Name         | Type   | Required | Description                                           |\n    | Content-Type | String | No       | The content type. Allowed values: \"application/json\". |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addHeader\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addHeader\"></xref>\n\n**Request Body Schema**\n\n```java\n{\n     filters (Optional): [\n          (Optional){\n             name: String (Optional)\n             values (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n }\n```\n\n**Response Body Schema**\n\n```java\n{\n     data (Optional): [\n          (Optional){\n             timestamp: String (Optional)\n             value: Double (Optional)\n         }\n     ]\n     dimensionValues (Optional): [\n          (Optional){\n             name: String (Optional)\n             value: String (Optional)\n         }\n     ]\n }\n```"
  returns:
    description: "the response to a metrics query as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns()"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns()"
  name: "listTestProfileRuns()"
  nameWithType: "LoadTestRunClient.listTestProfileRuns()"
  summary: "List test profile runs."
  syntax: "public PagedIterable<TestProfileRun> listTestProfileRuns()"
  desc: "List test profile runs. Get all test profile runs for the given filters."
  returns:
    description: "paged collection of TestProfileRun items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns(RequestOptions requestOptions)"
  name: "listTestProfileRuns(RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.listTestProfileRuns(RequestOptions requestOptions)"
  summary: "List test profile runs."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listTestProfileRuns(RequestOptions requestOptions)"
  desc: "List test profile runs. Get all test profile runs for the given filters.\n\n**Query Parameters**\n\n    | -------------------- | -------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name                 | Type           | Required | Description                                                                                                                                   |\n    | maxpagesize          | Integer        | No       | Maximum number of results to include in a single response.                                                                                    |\n    | minStartDateTime     | OffsetDateTime | No       | Minimum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on.                                                        |\n    | maxStartDateTime     | OffsetDateTime | No       | Maximum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on.                                                        |\n    | minEndDateTime       | OffsetDateTime | No       | Minimum End DateTime(RFC 3339 literal format) of the test profile runs to filter on.                                                          |\n    | maxEndDateTime       | OffsetDateTime | No       | Maximum End DateTime(RFC 3339 literal format) of the test profile runs to filter on.                                                          |\n    | createdDateStartTime | OffsetDateTime | No       | Start DateTime(RFC 3339 literal format) of the created time range to filter test profile runs.                                                |\n    | createdDateEndTime   | OffsetDateTime | No       | End DateTime(RFC 3339 literal format) of the created time range to filter test profile runs.                                                  |\n    | testProfileRunIds    | List<String>   | No       | Comma separated list of IDs of the test profile runs to filter. In the form of \",\" separated string.                                          |\n    | testProfileIds       | List<String>   | No       | Comma separated IDs of the test profiles which should be associated with the test profile runs to fetch. In the form of \",\" separated string. |\n    | statuses             | List<String>   | No       | Comma separated list of Statuses of the test profile runs to filter. In the form of \",\" separated string.                                     |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     testProfileRunId: String (Required)\n     displayName: String (Optional)\n     description: String (Optional)\n     testProfileId: String (Optional)\n     targetResourceId: String (Optional)\n     targetResourceConfigurations (Optional): {\n         kind: String(FunctionsFlexConsumption) (Required)\n     }\n     status: String(ACCEPTED/NOTSTARTED/EXECUTING/DONE/CANCELLING/CANCELLED/FAILED) (Optional)\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     durationInSeconds: Long (Optional)\n     testRunDetails (Optional): {\n         String (Required): {\n             status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Required)\n             configurationId: String (Required)\n             properties (Required): {\n                 String: String (Required)\n             }\n         }\n     }\n     recommendations (Optional): [\n          (Optional){\n             category: String(ThroughputOptimized/CostOptimized) (Required)\n             configurations (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "paged collection of TestProfileRun items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns(java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.time.OffsetDateTime,java.util.List<java.lang.String>,java.util.List<java.lang.String>,java.util.List<java.lang.String>)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestProfileRuns(OffsetDateTime minStartDateTime, OffsetDateTime maxStartDateTime, OffsetDateTime minEndDateTime, OffsetDateTime maxEndDateTime, OffsetDateTime createdDateStartTime, OffsetDateTime createdDateEndTime, List<String> testProfileRunIds, List<String> testProfileIds, List<String> statuses)"
  name: "listTestProfileRuns(OffsetDateTime minStartDateTime, OffsetDateTime maxStartDateTime, OffsetDateTime minEndDateTime, OffsetDateTime maxEndDateTime, OffsetDateTime createdDateStartTime, OffsetDateTime createdDateEndTime, List<String> testProfileRunIds, List<String> testProfileIds, List<String> statuses)"
  nameWithType: "LoadTestRunClient.listTestProfileRuns(OffsetDateTime minStartDateTime, OffsetDateTime maxStartDateTime, OffsetDateTime minEndDateTime, OffsetDateTime maxEndDateTime, OffsetDateTime createdDateStartTime, OffsetDateTime createdDateEndTime, List<String> testProfileRunIds, List<String> testProfileIds, List<String> statuses)"
  summary: "List test profile runs."
  parameters:
  - description: "Minimum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on."
    name: "minStartDateTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Maximum Start DateTime(RFC 3339 literal format) of the test profile runs to filter on."
    name: "maxStartDateTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Minimum End DateTime(RFC 3339 literal format) of the test profile runs to filter on."
    name: "minEndDateTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Maximum End DateTime(RFC 3339 literal format) of the test profile runs to filter on."
    name: "maxEndDateTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Start DateTime(RFC 3339 literal format) of the created time range to filter test\n profile runs."
    name: "createdDateStartTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "End DateTime(RFC 3339 literal format) of the created time range to filter test profile\n runs."
    name: "createdDateEndTime"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Comma separated list of IDs of the test profile runs to filter."
    name: "testProfileRunIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Comma separated IDs of the test profiles which should be associated with the test profile\n runs to fetch."
    name: "testProfileIds"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  - description: "Comma separated list of Statuses of the test profile runs to filter."
    name: "statuses"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public PagedIterable<TestProfileRun> listTestProfileRuns(OffsetDateTime minStartDateTime, OffsetDateTime maxStartDateTime, OffsetDateTime minEndDateTime, OffsetDateTime maxEndDateTime, OffsetDateTime createdDateStartTime, OffsetDateTime createdDateEndTime, List<String> testProfileRunIds, List<String> testProfileIds, List<String> statuses)"
  desc: "List test profile runs. Get all test profile runs for the given filters."
  returns:
    description: "paged collection of TestProfileRun items as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns()"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns()"
  name: "listTestRuns()"
  nameWithType: "LoadTestRunClient.listTestRuns()"
  summary: "Get all test runs for the given filters."
  syntax: "public PagedIterable<LoadTestRun> listTestRuns()"
  desc: "Get all test runs for the given filters."
  returns:
    description: "all test runs for the given filters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns(com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns(RequestOptions requestOptions)"
  name: "listTestRuns(RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.listTestRuns(RequestOptions requestOptions)"
  summary: "Get all test runs for the given filters."
  parameters:
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public PagedIterable<BinaryData> listTestRuns(RequestOptions requestOptions)"
  desc: "Get all test runs for the given filters.\n\n**Query Parameters**\n\n    | -------------- | -------------- | -------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n    | Name           | Type           | Required | Description                                                                                                                                                                             |\n    | orderby        | String         | No       | Sort on the supported fields in (field asc/desc) format. eg: executedDateTime asc. Supported fields - executedDateTime                                                                  |\n    | search         | String         | No       | Prefix based, case sensitive search on searchable fields - description, executedUser. For example, to search for a test run, with description 500 VUs, the search parameter can be 500. |\n    | testId         | String         | No       | Unique name of an existing load test.                                                                                                                                                   |\n    | executionFrom  | OffsetDateTime | No       | Start DateTime(RFC 3339 literal format) of test-run execution time filter range.                                                                                                        |\n    | executionTo    | OffsetDateTime | No       | End DateTime(RFC 3339 literal format) of test-run execution time filter range.                                                                                                          |\n    | status         | String         | No       | Comma separated list of test run status.                                                                                                                                                |\n    | maxpagesize    | Integer        | No       | Number of results in response.                                                                                                                                                          |\n    | createdByTypes | List<String>   | No       | Comma separated list of type of entities that have created the test run. In the form of \",\" separated string.                                                                           |\n\nYou can add these to a request with <xref uid=\"com.azure.core.http.rest.RequestOptions.addQueryParam\" data-throw-if-not-resolved=\"false\" data-raw-source=\"RequestOptions#addQueryParam\"></xref>\n\n**Response Body Schema**\n\n```java\n{\n     testRunId: String (Required)\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Required): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p75/p90/p95/p96/p97/p98/p99/p99.9/p99.99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n         passFailServerMetrics (Optional): {\n             String (Required): {\n                 resourceId: String (Optional, Required on create)\n                 metricNamespace: String (Optional, Required on create)\n                 metricName: String (Optional, Required on create)\n                 aggregation: String (Optional, Required on create)\n                 condition: String (Optional, Required on create)\n                 value: double (Optional, Required on create)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     autoStopCriteria (Optional): {\n         autoStopDisabled: Boolean (Optional)\n         errorRate: Double (Optional)\n         errorRateTimeWindowInSeconds: Long (Optional)\n     }\n     secrets (Optional): {\n         String (Required): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Required)\n     }\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     testRunStatistics (Optional): {\n         String (Required): {\n             transaction: String (Optional)\n             sampleCount: Double (Optional)\n             errorCount: Double (Optional)\n             errorPct: Double (Optional)\n             meanResTime: Double (Optional)\n             medianResTime: Double (Optional)\n             maxResTime: Double (Optional)\n             minResTime: Double (Optional)\n             pct1ResTime: Double (Optional)\n             pct2ResTime: Double (Optional)\n             pct3ResTime: Double (Optional)\n             pct75ResTime: Double (Optional)\n             pct96ResTime: Double (Optional)\n             pct97ResTime: Double (Optional)\n             pct98ResTime: Double (Optional)\n             pct999ResTime: Double (Optional)\n             pct9999ResTime: Double (Optional)\n             throughput: Double (Optional)\n             receivedKBytesPerSec: Double (Optional)\n             sentKBytesPerSec: Double (Optional)\n         }\n     }\n     regionalStatistics (Optional): {\n         String (Required): (recursive schema, see String above)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             requestsPerSecond: Integer (Optional)\n             maxResponseTimeInMs: Integer (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Long (Optional)\n         }\n         regionalLoadTestConfig (Optional): [\n              (Optional){\n                 engineInstances: int (Optional, Required on create)\n                 region: String (Optional, Required on create)\n             }\n         ]\n     }\n     testArtifacts (Optional): {\n         inputArtifacts (Optional): {\n             configFileInfo (Optional): {\n                 fileName: String (Required)\n                 url: String (Optional)\n                 fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS/ZIPPED_ARTIFACTS/URL_TEST_CONFIG/TEST_SCRIPT) (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n                 validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n                 validationFailureDetails: String (Optional)\n             }\n             testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n             userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n             inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n             urlTestConfigFileInfo (Optional): (recursive schema, see urlTestConfigFileInfo above)\n             additionalFileInfo (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n         outputArtifacts (Optional): {\n             resultFileInfo (Optional): (recursive schema, see resultFileInfo above)\n             logsFileInfo (Optional): (recursive schema, see logsFileInfo above)\n             artifactsContainerInfo (Optional): {\n                 url: String (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n             }\n             reportFileInfo (Optional): (recursive schema, see reportFileInfo above)\n         }\n     }\n     testResult: String(PASSED/NOT_APPLICABLE/FAILED) (Optional)\n     virtualUsers: Integer (Optional)\n     displayName: String (Optional)\n     testId: String (Optional)\n     description: String (Optional)\n     status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Optional)\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     executedDateTime: OffsetDateTime (Optional)\n     portalUrl: String (Optional)\n     duration: Long (Optional)\n     virtualUserHours: Double (Optional)\n     subnetId: String (Optional)\n     kind: String(URL/JMX/Locust) (Optional)\n     requestDataLevel: String(NONE/ERRORS) (Optional)\n     debugLogsEnabled: Boolean (Optional)\n     publicIPDisabled: Boolean (Optional)\n     createdByType: String(User/ScheduledTrigger) (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "all test runs for the given filters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns(java.lang.String,java.lang.String,java.lang.String,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,java.util.List<java.lang.String>)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.listTestRuns(String orderBy, String search, String testId, OffsetDateTime executionFrom, OffsetDateTime executionTo, String status, List<String> createdByTypes)"
  name: "listTestRuns(String orderBy, String search, String testId, OffsetDateTime executionFrom, OffsetDateTime executionTo, String status, List<String> createdByTypes)"
  nameWithType: "LoadTestRunClient.listTestRuns(String orderBy, String search, String testId, OffsetDateTime executionFrom, OffsetDateTime executionTo, String status, List<String> createdByTypes)"
  summary: "Get all test runs for the given filters."
  parameters:
  - description: "Sort on the supported fields in (field asc/desc) format. eg: executedDateTime\n asc. Supported fields - executedDateTime."
    name: "orderBy"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Prefix based, case sensitive search on searchable fields - description,\n executedUser. For example, to search for a test run, with description 500 VUs,\n the search parameter can be 500."
    name: "search"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Unique name of an existing load test."
    name: "testId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Start DateTime(RFC 3339 literal format) of test-run execution time filter range."
    name: "executionFrom"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "End DateTime(RFC 3339 literal format) of test-run execution time filter range."
    name: "executionTo"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html\">OffsetDateTime</a>"
  - description: "Comma separated list of test run status."
    name: "status"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "Comma separated list of type of entities that have created the test run."
    name: "createdByTypes"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/List.html\">List</a>&lt;<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>&gt;"
  syntax: "public PagedIterable<LoadTestRun> listTestRuns(String orderBy, String search, String testId, OffsetDateTime executionFrom, OffsetDateTime executionTo, String status, List<String> createdByTypes)"
  desc: "Get all test runs for the given filters."
  returns:
    description: "all test runs for the given filters as paginated response with <xref uid=\"com.azure.core.http.rest.PagedIterable\" data-throw-if-not-resolved=\"false\" data-raw-source=\"PagedIterable\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.PagedIterable?alt=com.azure.core.http.rest.PagedIterable&text=PagedIterable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestProfileRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestProfileRun(String testProfileRunId)"
  name: "stopTestProfileRun(String testProfileRunId)"
  nameWithType: "LoadTestRunClient.stopTestProfileRun(String testProfileRunId)"
  summary: "Stop test profile run."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public TestProfileRun stopTestProfileRun(String testProfileRunId)"
  desc: "Stop test profile run. Stop test profile run for the given test profile run Id."
  returns:
    description: "test Profile Run model."
    type: "<xref href=\"com.azure.developer.loadtesting.models.TestProfileRun?alt=com.azure.developer.loadtesting.models.TestProfileRun&text=TestProfileRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestProfileRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  name: "stopTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.stopTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  summary: "Stop test profile run."
  parameters:
  - description: "Unique identifier for the test profile run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testProfileRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> stopTestProfileRunWithResponse(String testProfileRunId, RequestOptions requestOptions)"
  desc: "Stop test profile run. Stop test profile run for the given test profile run Id.\n\n**Response Body Schema**\n\n```java\n{\n     testProfileRunId: String (Required)\n     displayName: String (Optional)\n     description: String (Optional)\n     testProfileId: String (Optional)\n     targetResourceId: String (Optional)\n     targetResourceConfigurations (Optional): {\n         kind: String(FunctionsFlexConsumption) (Required)\n     }\n     status: String(ACCEPTED/NOTSTARTED/EXECUTING/DONE/CANCELLING/CANCELLED/FAILED) (Optional)\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     durationInSeconds: Long (Optional)\n     testRunDetails (Optional): {\n         String (Required): {\n             status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Required)\n             configurationId: String (Required)\n             properties (Required): {\n                 String: String (Required)\n             }\n         }\n     }\n     recommendations (Optional): [\n          (Optional){\n             category: String(ThroughputOptimized/CostOptimized) (Required)\n             configurations (Optional): [\n                 String (Optional)\n             ]\n         }\n     ]\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "test Profile Run model along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestRun(java.lang.String)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestRun(String testRunId)"
  name: "stopTestRun(String testRunId)"
  nameWithType: "LoadTestRunClient.stopTestRun(String testRunId)"
  summary: "Stop test run by test run Id."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  syntax: "public LoadTestRun stopTestRun(String testRunId)"
  desc: "Stop test run by test run Id."
  returns:
    description: "load test run model."
    type: "<xref href=\"com.azure.developer.loadtesting.models.LoadTestRun?alt=com.azure.developer.loadtesting.models.LoadTestRun&text=LoadTestRun\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestRunWithResponse(java.lang.String,com.azure.core.http.rest.RequestOptions)"
  fullName: "com.azure.developer.loadtesting.LoadTestRunClient.stopTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  name: "stopTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  nameWithType: "LoadTestRunClient.stopTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  summary: "Stop test run by test run Id."
  parameters:
  - description: "Unique test run identifier for the load test run, must contain only lower-case alphabetic,\n numeric, underscore or hyphen characters."
    name: "testRunId"
    type: "<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html\">String</a>"
  - description: "The options to configure the HTTP request before HTTP client sends it."
    name: "requestOptions"
    type: "<xref href=\"com.azure.core.http.rest.RequestOptions?alt=com.azure.core.http.rest.RequestOptions&text=RequestOptions\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Response<BinaryData> stopTestRunWithResponse(String testRunId, RequestOptions requestOptions)"
  desc: "Stop test run by test run Id.\n\n**Response Body Schema**\n\n```java\n{\n     testRunId: String (Required)\n     passFailCriteria (Optional): {\n         passFailMetrics (Optional): {\n             String (Required): {\n                 clientMetric: String(response_time_ms/latency/error/requests/requests_per_sec) (Optional)\n                 aggregate: String(count/percentage/avg/p50/p75/p90/p95/p96/p97/p98/p99/p99.9/p99.99/min/max) (Optional)\n                 condition: String (Optional)\n                 requestName: String (Optional)\n                 value: Double (Optional)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n         passFailServerMetrics (Optional): {\n             String (Required): {\n                 resourceId: String (Optional, Required on create)\n                 metricNamespace: String (Optional, Required on create)\n                 metricName: String (Optional, Required on create)\n                 aggregation: String (Optional, Required on create)\n                 condition: String (Optional, Required on create)\n                 value: double (Optional, Required on create)\n                 action: String(continue/stop) (Optional)\n                 actualValue: Double (Optional)\n                 result: String(passed/undetermined/failed) (Optional)\n             }\n         }\n     }\n     autoStopCriteria (Optional): {\n         autoStopDisabled: Boolean (Optional)\n         errorRate: Double (Optional)\n         errorRateTimeWindowInSeconds: Long (Optional)\n     }\n     secrets (Optional): {\n         String (Required): {\n             value: String (Optional)\n             type: String(AKV_SECRET_URI/SECRET_VALUE) (Optional)\n         }\n     }\n     certificate (Optional): {\n         value: String (Optional)\n         type: String(AKV_CERT_URI) (Optional)\n         name: String (Optional)\n     }\n     environmentVariables (Optional): {\n         String: String (Required)\n     }\n     errorDetails (Optional): [\n          (Optional){\n             message: String (Optional)\n         }\n     ]\n     testRunStatistics (Optional): {\n         String (Required): {\n             transaction: String (Optional)\n             sampleCount: Double (Optional)\n             errorCount: Double (Optional)\n             errorPct: Double (Optional)\n             meanResTime: Double (Optional)\n             medianResTime: Double (Optional)\n             maxResTime: Double (Optional)\n             minResTime: Double (Optional)\n             pct1ResTime: Double (Optional)\n             pct2ResTime: Double (Optional)\n             pct3ResTime: Double (Optional)\n             pct75ResTime: Double (Optional)\n             pct96ResTime: Double (Optional)\n             pct97ResTime: Double (Optional)\n             pct98ResTime: Double (Optional)\n             pct999ResTime: Double (Optional)\n             pct9999ResTime: Double (Optional)\n             throughput: Double (Optional)\n             receivedKBytesPerSec: Double (Optional)\n             sentKBytesPerSec: Double (Optional)\n         }\n     }\n     regionalStatistics (Optional): {\n         String (Required): (recursive schema, see String above)\n     }\n     loadTestConfiguration (Optional): {\n         engineInstances: Integer (Optional)\n         splitAllCSVs: Boolean (Optional)\n         quickStartTest: Boolean (Optional)\n         optionalLoadTestConfig (Optional): {\n             endpointUrl: String (Optional)\n             requestsPerSecond: Integer (Optional)\n             maxResponseTimeInMs: Integer (Optional)\n             virtualUsers: Integer (Optional)\n             rampUpTime: Integer (Optional)\n             duration: Long (Optional)\n         }\n         regionalLoadTestConfig (Optional): [\n              (Optional){\n                 engineInstances: int (Optional, Required on create)\n                 region: String (Optional, Required on create)\n             }\n         ]\n     }\n     testArtifacts (Optional): {\n         inputArtifacts (Optional): {\n             configFileInfo (Optional): {\n                 fileName: String (Required)\n                 url: String (Optional)\n                 fileType: String(JMX_FILE/USER_PROPERTIES/ADDITIONAL_ARTIFACTS/ZIPPED_ARTIFACTS/URL_TEST_CONFIG/TEST_SCRIPT) (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n                 validationStatus: String(NOT_VALIDATED/VALIDATION_SUCCESS/VALIDATION_FAILURE/VALIDATION_INITIATED/VALIDATION_NOT_REQUIRED) (Optional)\n                 validationFailureDetails: String (Optional)\n             }\n             testScriptFileInfo (Optional): (recursive schema, see testScriptFileInfo above)\n             userPropFileInfo (Optional): (recursive schema, see userPropFileInfo above)\n             inputArtifactsZipFileInfo (Optional): (recursive schema, see inputArtifactsZipFileInfo above)\n             urlTestConfigFileInfo (Optional): (recursive schema, see urlTestConfigFileInfo above)\n             additionalFileInfo (Optional): [\n                 (recursive schema, see above)\n             ]\n         }\n         outputArtifacts (Optional): {\n             resultFileInfo (Optional): (recursive schema, see resultFileInfo above)\n             logsFileInfo (Optional): (recursive schema, see logsFileInfo above)\n             artifactsContainerInfo (Optional): {\n                 url: String (Optional)\n                 expireDateTime: OffsetDateTime (Optional)\n             }\n             reportFileInfo (Optional): (recursive schema, see reportFileInfo above)\n         }\n     }\n     testResult: String(PASSED/NOT_APPLICABLE/FAILED) (Optional)\n     virtualUsers: Integer (Optional)\n     displayName: String (Optional)\n     testId: String (Optional)\n     description: String (Optional)\n     status: String(ACCEPTED/NOTSTARTED/PROVISIONING/PROVISIONED/CONFIGURING/CONFIGURED/EXECUTING/EXECUTED/DEPROVISIONING/DEPROVISIONED/DONE/CANCELLING/CANCELLED/FAILED/VALIDATION_SUCCESS/VALIDATION_FAILURE) (Optional)\n     startDateTime: OffsetDateTime (Optional)\n     endDateTime: OffsetDateTime (Optional)\n     executedDateTime: OffsetDateTime (Optional)\n     portalUrl: String (Optional)\n     duration: Long (Optional)\n     virtualUserHours: Double (Optional)\n     subnetId: String (Optional)\n     kind: String(URL/JMX/Locust) (Optional)\n     requestDataLevel: String(NONE/ERRORS) (Optional)\n     debugLogsEnabled: Boolean (Optional)\n     publicIPDisabled: Boolean (Optional)\n     createdByType: String(User/ScheduledTrigger) (Optional)\n     createdDateTime: OffsetDateTime (Optional)\n     createdBy: String (Optional)\n     lastModifiedDateTime: OffsetDateTime (Optional)\n     lastModifiedBy: String (Optional)\n }\n```"
  returns:
    description: "load test run model along with <xref uid=\"com.azure.core.http.rest.Response\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Response\"></xref>."
    type: "<xref href=\"com.azure.core.http.rest.Response?alt=com.azure.core.http.rest.Response&text=Response\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"com.azure.core.util.BinaryData?alt=com.azure.core.util.BinaryData&text=BinaryData\" data-throw-if-not-resolved=\"False\" />&gt;"
type: "class"
desc: "Initializes a new instance of the synchronous LoadTestRunClient type."
metadata: {}
package: "com.azure.developer.loadtesting"
artifact: com.azure:azure-developer-loadtesting:1.1.0-beta.1
